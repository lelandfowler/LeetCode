from typing import List
from collections import Counter


class Solution:
    def isValidSudoku(board: List[List[str]]) -> bool:
        rows = {}
        columns = {}
        squares = {}

        for i in range(9):
            rows[i] = list()
            columns[i] = list()

        for i in range(3):
            for j in range(3):
                squares[(i,j)] = list()

        for row in range(9):
            for col in range(9):
                num = board[row][col]
                if num != '.':
                    square = (row//3, col//3)
                    if num in rows[row] or num in columns[col] or num in squares[square]:
                        return False
                    rows[row].append(num)
                    columns[col].append(num)
                    squares[square].append(num)
        return True


a_board = \
    [
        ["5", "3", ".", ".", "7", ".", ".", ".", "."]
        , ["6", ".", ".", "1", "9", "5", ".", ".", "."]
        , [".", "9", "8", ".", ".", ".", ".", "6", "."]
        , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
        , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
        , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
        , [".", "6", ".", ".", ".", ".", "2", "8", "."]
        , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
        , [".", ".", ".", ".", "8", ".", ".", "7", "9"]
    ]
s = Solution
print(s.isValidSudoku(a_board))

a_board = \
    [
        ["8", "3", ".", ".", "7", ".", ".", ".", "."]
        , ["6", ".", ".", "1", "9", "5", ".", ".", "."]
        , [".", "9", "8", ".", ".", ".", ".", "6", "."]
        , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
        , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
        , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
        , [".", "6", ".", ".", ".", ".", "2", "8", "."]
        , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
        , [".", ".", ".", ".", "8", ".", ".", "7", "9"]
    ]
print(s.isValidSudoku(a_board))
a_board = \
    [
        ["5", "3", ".", ".", "7", ".", ".", ".", "."]
        , ["6", "8", ".", "1", "9", "5", ".", ".", "."]
        , [".", "9", "8", ".", ".", ".", ".", "6", "."]
        , ["8", ".", ".", ".", "6", ".", ".", ".", "3"]
        , ["4", ".", ".", "8", ".", "3", ".", ".", "1"]
        , ["7", ".", ".", ".", "2", ".", ".", ".", "6"]
        , [".", "6", ".", ".", ".", ".", "2", "8", "."]
        , [".", ".", ".", "4", "1", "9", ".", ".", "5"]
        , [".", ".", ".", ".", "8", ".", ".", "7", "9"]
    ]
s = Solution
print(s.isValidSudoku(a_board))